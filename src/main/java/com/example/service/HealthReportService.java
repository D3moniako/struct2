package com.example.service;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import com.example.mapper.HealthReportMapper;
import com.example.model.HealthReport;

import java.io.InputStream;
import java.util.List;

public class HealthReportService {
    private SqlSessionFactory sqlSessionFactory;

    public HealthReportService() {
        // Carica la configurazione di MyBatis
        InputStream inputStream = HealthReportService.class.getClassLoader().getResourceAsStream("mybatis-config.xml");
        if (inputStream == null) {
            throw new RuntimeException("MyBatis configuration file not found.");
        }
        sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
    }
    // crea tabella testa connessione al db 
    public void createHealthReportsTable() {
        try (SqlSession session = sqlSessionFactory.openSession()) {
            String createTableSQL = "CREATE TABLE health_reports (" +
                                    "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                                    "animal_id NUMBER NOT NULL, " +
                                    "report_date DATE NOT NULL, " +
                                    "report_details VARCHAR2(255) NOT NULL" +
                                    ")";
            session.update("com.example.mapper.HealthReportMapper.createTable", createTableSQL);
            session.commit();
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Error creating health_reports table", e);
        }
    }
    public void addHealthReport(int animalId, String reportDate, String reportDetails) {
        try (SqlSession session = sqlSessionFactory.openSession()) {
            HealthReportMapper mapper = session.getMapper(HealthReportMapper.class);
            mapper.addHealthReport(animalId, reportDate, reportDetails);
            session.commit();
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Error adding health report", e);
        }
    }

    public List<HealthReport> getHealthReportsByAnimal(int animalId) {
        try (SqlSession session = sqlSessionFactory.openSession()) {
            HealthReportMapper mapper = session.getMapper(HealthReportMapper.class);
            return mapper.getHealthReportsByAnimal(animalId);
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Error fetching health reports", e);
        }
    }
}
// package com.example.service;

// import com.example.mapper.HealthReportMapper;
// import com.example.model.HealthReport;
// import java.util.List;

// public class HealthReportService {
//     private HealthReportMapper healthReportMapper;

//     public void setHealthReportMapper(HealthReportMapper healthReportMapper) {
//         this.healthReportMapper = healthReportMapper;
//     }

//     public void addHealthReport(int animalId, String reportDate, String reportDetails) {
//         healthReportMapper.addHealthReport(animalId, reportDate, reportDetails);
//     }

//     public List<HealthReport> getHealthReportsByAnimal(int animalId) {
//         return healthReportMapper.getHealthReportsByAnimal(animalId);
//     }
// }

